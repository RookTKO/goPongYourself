<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG &amp;&amp; INITIALIZE

randomize();
loadJSON();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object States
enum state
{
    game_start,
    game_over
}

state = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

globalvar game_speed;
game_speed = 60;
card = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
switch state{
    case 1:
        break;
    case 0:
    paddleCreation((room_width/2), 768, objPaddleP1);
    paddleCreation((room_width/2), 64, objPaddleAi);
    wallCreation()
        if (!instance_exists(ball))
        {
        scr_sprite_asymble(ball, sprBall, 30, 500, 10,room_width/2,400 );
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (instance_exists(playerControl))
{

    progressBar(view_xview+96, view_yview+928, objPaddleP1.hP, objPaddleP1.hpMax, sprHealth, sprGui, view_xview+97, view_yview+929);
    drawTextBold(view_xview+96+(sprite_get_width(sprGui)/4), view_yview+928+(sprite_get_height(sprGui)/4), "LP: " + string(objPaddleP1.hP), c_white, c_black);
    progressBar(view_xview+1536, view_yview+928, objPaddleP1.wP, objPaddleP1.wpMax, sprWarpPoints, sprGui, view_xview+1537, view_yview+929);
    drawTextBold(view_xview+1536+(sprite_get_width(sprGui)/4), view_yview+928+(sprite_get_height(sprGui)/4), "WP: " + string(objPaddleP1.wP),c_white, c_black);
}
if (instance_exists(aiControl))
{
progressBar(view_xview+(room_width/2), view_yview+8, objPaddleAi.hP, objPaddleAi.hPMax, sprAIHealth, sprAIGUI, view_xview+240, view_yview+9);
drawTextBold(view_xview+(room_width/2)-90, view_yview+8, "Enemy Life Points: " + string(objPaddleAi.hP),c_white, c_black);
    //draw_text((room_width/2), 32, "Player AI: " + string(objPaddleAi.hP));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
